추천을 위해서 우리는 소분류 진입시 볼 수 있는 물품 테이블을 활용했다.
우리는 관리자의 입장에서 생각하여 재고 순으로 추천 데이타를 추출했으며
Select 된 물품 중 가장 재고가 많은 물품의 이름 옆에 (*)를 붙여 추천아이템임을 표시했다.
해당 (*)표시가 추천아이템임을 안내문구로 명시했다.
아래에 해당 코드(showPro.jsp)의 일부를 첨부한다.
<%

	String sql = "Select name from product where d_category_num="

	+request.getParameter("classification") +" and shop_num="

	+request.getParameter("shop") + " and shop_stock =(select max(shop_stock) from product where shop_num="

	+request.getParameter("shop")

	+" and d_category_num="

	+request.getParameter("classification")+")";

	

	stmt = conn.prepareStatement(sql);

	res=stmt.executeQuery();

	

	String query = "Select name, price from product where d_category_num="

	+request.getParameter("classification") +" and shop_num="

	+request.getParameter("shop") + " and shop_stock > 0";

	

	pstmt = conn.prepareStatement(query);

	rs=pstmt.executeQuery();

	

	out.println("<table border=\"1\">");

	ResultSetMetaData rsmd = rs.getMetaData();

	ResultSetMetaData rsmdd = res.getMetaData();

	int cnt = rsmd.getColumnCount();

	for(int j=1;j<=cnt;j++){

		out.println("<th>"+rsmd.getColumnName(j)+"</th>");

	}

	Integer i=0;

	Integer ck=0;

	while(res.next()){

		arr[i++]=res.getString(1);

	}

	ck=i;

	while(rs.next()){

		String c=rs.getString(1);

		for(i=0;i<ck;i++)

			if(c.equals(arr[i])) c+="*";

		out.println("<tr>");

		out.println("<td>"+c+"</td>");

		out.println("<td>"+rs.getInt(2)+"</td>");

		n = rs.getString(1);

		out.println("<td><input type=\"button\" onclick = \"moveURL('"+n+"')\" value = \"detail\"> </td>");

		out.println("</tr>");

	}

	

	out.println("<table/>");

%> 
